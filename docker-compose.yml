version: '3'

services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: always
    # user: 1000:1000 # Run as non-root user for extra security
    env_file:
      - vaultwarden.env
    volumes:
      - ./data/vw-data:/data
      - ./logrotate/bitwarden:/etc/logrotate.d/bitwarden:ro

  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    ports:
      - 80:80  # Needed for the ACME HTTP-01 challenge.
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data/caddy-config:/config
      - ./data/caddy-data:/data
      - ./logrotate/caddy:/etc/logrotate.d/caddy:ro
    env_file:
      - caddy.env

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: always
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./data/fail2ban-data:/data
      - ./data/vw-data:/vw-data
      - ./fail2ban/jail.d:/etc/fail2ban/jail.d
      - ./fail2ban/filter.d/vw.local:/etc/fail2ban/filter.d/vw.local
      - ./fail2ban/filter.d/vw-admin.local:/etc/fail2ban/filter.d/vw-admin.local
      - ./logrotate/fail2ban:/etc/logrotate.d/fail2ban:ro
    env_file:
      - fail2ban.env

  countryblock:
    # The block script will block any country (defaults to CN and AU)
    # Requires cap_add as listed and privileged because it uses iptables and ipset
    # https://hub.docker.com/_/alpine/
    image: alpine:latest
    restart: always
    container_name: countryblock
    depends_on:
      - vaultwarden
    volumes:
      - ./countryblock/block.sh:/block.sh:ro
      - ./data/countryblock-data:/data
    network_mode: "host"
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    env_file:
      - countryblock.env
    command: >
      sh -c 'apk --update --no-cache add ipset iptables ip6tables wget bash tzdata &&
             ln -sf /proc/1/fd/1 /var/log/block.log &&
             sed -i "/bash \\/block\\.sh update/d" /etc/crontabs/root &&
             echo "$$COUNTRYBLOCK_SCHEDULE bash /block.sh update" >> /etc/crontabs/root &&
             crond -d 8 &&
             bash /block.sh start'
